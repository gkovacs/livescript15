function import$(e,r){var t={}.hasOwnProperty;for(var n in r)t.call(r,n)&&(e[n]=r[n]);return e}function importAll$(e,r){for(var t in r)e[t]=r[t];return e}var lexer,parser,ast,SourceNode,path,toString$={}.toString;lexer=require("./lexer"),parser=require("./parser").parser,ast=require("./ast"),SourceNode=require("source-map").SourceNode,path=require("path"),parser.yy=ast,parser.lexer={lex:function(){var e,r,t,n,o,i;return e=this.tokens[++this.pos]||[""],r=e[0],this.yytext=e[1],t=e[2],n=e[3],e=this.tokens[this.pos+1]||[""],o=e[2],i=e[3],this.yylineno=t,this.yylloc={first_line:t,first_column:n,last_line:o,last_column:i},r},setInput:function(e){return this.pos=-1,this.tokens=e},upcomingInput:function(){return""}},exports.VERSION="1.5.0",exports.compile=function(e,r){var t,n,o,i,a,s,p,l,u;null==r&&(r={}),null==r.header&&(r.header=!0);try{return r.json?(t=Function(exports.compile(e,{bare:!0,run:!0,print:!0}))(),JSON.stringify(t,null,2)+"\n"):(n=parser.parse(lexer.lex(e)),r.run&&r.print&&n.makeReturn(),o=n.compileRoot(r),r.header&&(o=new SourceNode(null,null,null,["// Generated by LiveScript "+exports.VERSION+"\n",o])),r.map&&"none"!==r.map?(i=r.filename,a=r.outputFilename,i||(i="unnamed-"+Math.floor(4294967296*Math.random()).toString(16)+".ls"),o.setFile(i),t=o.toStringWithSourceMap(),"embedded"===r.map&&t.map.setSourceContent(i,e),"linked"===(s=r.map)||"debug"===s?(p=a+".map",t.code+="\n//# sourceMappingURL="+p+"\n"):t.code+="\n//# sourceMappingURL=data:application/json;base64,"+new Buffer(t.map.toString()).toString("base64")+"\n",t):o.toString())}catch(e){throw l=e,(u=r.filename)&&(l.message+="\nat "+u),l}},exports.ast=function(e){return parser.parse("string"==typeof e?lexer.lex(e):e)},exports.tokens=lexer.lex,exports.lex=function(e){return lexer.lex(e,{raw:!0})},exports.run=function(e,r){var t,n;return t=exports.compile(e,(n={},import$(n,r),n.bare=!0,n)),Function("String"===toString$.call(t).slice(8,-1)?t:t.code)()},exports.tokens.rewrite=lexer.rewrite,importAll$(exports.ast,parser.yy);